<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:util="http://www.springframework.org/schema/util"
             xmlns:context="http://www.springframework.org/schema/context"
             xsi:schemaLocation="http://www.springframework.org/schema/beans 
                 http://www.springframework.org/schema/beans/spring-beans.xsd
                 http://www.springframework.org/schema/security 
                 http://www.springframework.org/schema/security/spring-security.xsd
                 http://www.springframework.org/schema/util 
                 http://www.springframework.org/schema/util/spring-util.xsd
                 http://www.springframework.org/schema/context 
                 http://www.springframework.org/schema/context/spring-context.xsd">
 
    <global-method-security pre-post-annotations="enabled">
        <!--
                AspectJ pointcut expression that locates our "post" method and
                applies security that way <protect-pointcut expression="execution(*
                bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
        -->
    </global-method-security>
    <http use-expressions="true" auto-config="true" authentication-manager-ref="authenManager">
        <intercept-url pattern="/private/admin/**" access="hasAnyRole('ADMIN','ZONE')" />
        <intercept-url pattern="/private/**" access="isAuthenticated()" />
        <form-login  default-target-url="/private/index.xhtml" login-page="/index.xhtml" />
        <logout logout-url="/logout" invalidate-session="true"
                logout-success-url="/index.xhtml" />
        <custom-filter ref="sessionManagementFilter" before="SESSION_MANAGEMENT_FILTER"/>
    </http>
    <authentication-manager alias="authenManager">
        <authentication-provider ref="wsAuthenticationProvider"></authentication-provider>
    </authentication-manager>
    <beans:bean id="wsAuthenticationProvider" class="${authentication.provider}"></beans:bean>
    <beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <beans:property name="basename" value="org.springframework.security.messages"/>
    </beans:bean>
 
    <beans:bean id="dcService" class="org.springframework.remoting.jaxws.JaxWsPortProxyFactoryBean" scope="singleton" >
        <beans:property name="serviceInterface" value="th.co.geniustree.nhso.ws.authen.api.UCDCAuthenService"/>
        <beans:property name="wsdlDocumentResource" value="${wsdlDocumentResource}"/>
        <beans:property name="namespaceUri" value="${namespaceUri}"/>
        <beans:property name="serviceName" value="${serviceName}"/>
        <beans:property name="portName" value="${portName}"/>
        <beans:property name="endpointAddress" value="${endpointAddress}"/>
        <beans:property name="lookupServiceOnStartup" value="false"/>
    </beans:bean>
    <beans:bean id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
        <beans:constructor-arg name="securityContextRepository" ref="httpSessionSecurityContextRepository" />
        <beans:property name="invalidSessionStrategy" ref="redirectStrategy"/>
    </beans:bean>
    <beans:bean id="redirectStrategy" class="th.co.geniustree.nhso.drugcatalog.jsf.JsfRedirectStrategy">
        <beans:constructor-arg name="invalidSessionUrl" value="/index.xhtml" />
    </beans:bean>
    <beans:bean id="httpSessionSecurityContextRepository" class="org.springframework.security.web.context.HttpSessionSecurityContextRepository"/>
</beans:beans> 
